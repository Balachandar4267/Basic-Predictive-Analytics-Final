# -*- coding: utf-8 -*-
"""LVADSUSR74_BALACHANDAR_G-LAB2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dVJJMhXFb6TFhr2rLMzbWUCshkLE5J8g
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import IsolationForest
from sklearn.metrics import mean_absolute_error,mean_squared_error

df = pd.read_csv("/content/sample_data/auto-mpg.csv")
df.info()

df.head()

#visualisation
df.groupby('horsepower').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))
plt.gca().spines[['top', 'right',]].set_visible(False)

#Identifying and filling null values
#df.isnull().sum()

df.fillna(method ="ffill",inplace = True)
df.fillna(method = "bfill",inplace = True)
df.isnull().sum()

#Identifying Duplicates
df.duplicated().sum()

#detecting outliers
plt.figure(figsize=(20,12))
sns.boxplot(data = df)
plt.title("Detecting Outliers")
plt.show()

df.drop("car name",axis =1,inplace = True)
df.head()

df.drop('model year',axis = 1,inplace=True)
df.drop('origin',axis =1,inplace = True)

X = df[['cylinders','displacement','weight','acceleration']]
y = df['mpg']
clf = LinearRegression()

X_train,X_test,y_train,y_test = train_test_split(X,y,test_size =0.3,random_state = 42)
clf.fit(X_train,y_train)
a_pre = clf.predict(X_test)
print(a_pre)

a = mean_absolute_error(y_test,a_pre)
print("The Mean absolute error of the model:",a)

b=mean_squared_error(y_test,a_pre)
print("The Mean squared error of the model:",b)