# -*- coding: utf-8 -*-
"""LVADSUSR74_BALACHANDAR G-LAB3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12h5iwAXf8D2Pie9tY69QAjSA5dHEgWZy
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import accuracy_score
from sklearn.cluster import KMeans
from sklearn.model_selection import train_test_split
from sklearn.ensemble import IsolationForest  # for removing outliers
from sklearn.metrics import roc_curve,auc
from sklearn.preprocessing import StandardScaler

df = pd.read_csv("/content/sample_data/seeds.csv")
df.info()

#Identifying and filling null values
#df.isnull().sum()

df.fillna(method ="ffill",inplace = True)
df.fillna(method = "bfill",inplace = True)
df.isnull().sum()

#Identifying Duplicates
df.duplicated().sum()

#detecting outliers
plt.figure(figsize=(20,12))
sns.boxplot(data = df)
plt.title("Detecting Outliers")
plt.show()

#removing outliers
df_55=pd.DataFrame(df)

iso = IsolationForest(contamination=0.05)
outliers = iso.fit_predict(df_55['Asymmetry coefficient'].values.reshape(1,-1))

dd=df.drop(df_55.iloc[np.where(outliers== -1)].index,inplace=False)

#after removing outliers
plt.figure(figsize=(20,12))
sns.boxplot(data = dd)
plt.title("Detecting Outliers")
plt.show()

#Fitting the parameters and identifying the K value

X=dd[['Length of kernel','Width of kernel']]
scaler=MinMaxScaler()
X_scaled=scaler.fit_transform(X)
X_scaled

cluster_list=[1,2,3,4,5]
sse_lst=[]

for i in cluster_list:
  kmeans=KMeans(n_clusters=i)
  kmeans.fit(X_scaled)
  sse=kmeans.inertia_
  sse_lst.append(sse)

sns.lineplot(x=cluster_list, y=sse_lst)
plt.show()

kmeans_best_fit=KMeans(n_clusters=2)
kmeans_best_fit.fit(X_scaled)
clusters=kmeans_best_fit.predict(X_scaled)
dd['cluster']=clusters
print(dd)

#visualising teh area and perimeter
cluster_centers=kmeans_best_fit.cluster_centers_
sns.scatterplot(data=dd,x='Area',y='Perimeter',hue='cluster')
plt.show()